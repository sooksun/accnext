const nodemailer = require('nodemailer');

/**
 * Email Service ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
 */
class EmailService {
  constructor() {
    this.transporter = null;
    this.initializeTransporter();
  }

  /**
   * ‡∏™‡∏£‡πâ‡∏≤‡∏á transporter ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
   */
  initializeTransporter() {
    if (!process.env.EMAIL_HOST || !process.env.EMAIL_USER) {
      console.warn('‚ö†Ô∏è  Email configuration not found. Email features will be disabled.');
      return;
    }

    try {
      this.transporter = nodemailer.createTransport({
        host: process.env.EMAIL_HOST,
        port: parseInt(process.env.EMAIL_PORT) || 587,
        secure: false, // true for 465, false for other ports
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASSWORD,
        },
      });

      console.log('‚úÖ Email transporter initialized successfully');
    } catch (error) {
      console.error('‚ùå Failed to initialize email transporter:', error);
    }
  }

  /**
   * ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö
   * @param {Object} alertData - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
   */
  async sendBudgetExceededAlert(alertData) {
    if (!this.transporter) {
      console.warn('Email transporter not available');
      return false;
    }

    try {
      const { categoryName, budgetLimit, actualSpent, exceeded } = alertData;
      
      const mailOptions = {
        from: process.env.EMAIL_FROM || process.env.EMAIL_USER,
        to: process.env.NOTIFICATION_EMAIL || 'sooksun2511@gmail.com',
        subject: '‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì - Solution NextGen',
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background-color: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h2 style="margin: 0 0 15px 0; color: #721c24;">‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</h2>
              
              <p><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> ${categoryName}</p>
              <p><strong>‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î:</strong> ${this.formatCurrency(budgetLimit)}</p>
              <p><strong>‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á:</strong> ${this.formatCurrency(actualSpent)}</p>
              <p><strong>‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</strong> <span style="color: #dc3545; font-weight: bold;">${this.formatCurrency(exceeded)}</span></p>
              
              <hr style="margin: 20px 0; border: none; border-top: 1px solid #f5c6cb;">
              
              <p style="font-size: 14px; color: #6c757d;">
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ
              </p>
              
              <p style="font-size: 12px; color: #6c757d; margin-top: 30px;">
                ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AccNext - Solution NextGen<br>
                ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date().toLocaleString('th-TH')}
              </p>
            </div>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Budget exceeded alert email sent successfully');
      return true;

    } catch (error) {
      console.error('‚ùå Failed to send budget exceeded alert email:', error);
      return false;
    }
  }

  /**
   * ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
   * @param {Object} reportData - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
   */
  async sendMonthlyReport(reportData) {
    if (!this.transporter) {
      console.warn('Email transporter not available');
      return false;
    }

    try {
      const { month, year, totalIncome, totalExpense, netProfit } = reportData;
      
      const mailOptions = {
        from: process.env.EMAIL_FROM || process.env.EMAIL_USER,
        to: process.env.NOTIFICATION_EMAIL || 'sooksun2511@gmail.com',
        subject: `üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ${month}/${year} - Solution NextGen`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background-color: #e7f3ff; border: 1px solid #b8daff; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h2 style="margin: 0 0 20px 0; color: #004085;">üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</h2>
              
              <p><strong>‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô:</strong> ${month}/${year}</p>
              
              <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
                <tr style="background-color: #f8f9fa;">
                  <td style="padding: 12px; border: 1px solid #dee2e6; font-weight: bold;">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; font-weight: bold; text-align: right;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏£‡∏ß‡∏°</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right; color: #28a745; font-weight: bold;">
                    ${this.formatCurrency(totalIncome)}
                  </td>
                </tr>
                <tr>
                  <td style="padding: 12px; border: 1px solid #dee2e6;">‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right; color: #dc3545; font-weight: bold;">
                    ${this.formatCurrency(totalExpense)}
                  </td>
                </tr>
                <tr style="background-color: #f8f9fa;">
                  <td style="padding: 12px; border: 1px solid #dee2e6; font-weight: bold;">‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥</td>
                  <td style="padding: 12px; border: 1px solid #dee2e6; text-align: right; font-weight: bold; color: ${netProfit >= 0 ? '#28a745' : '#dc3545'};">
                    ${this.formatCurrency(netProfit)}
                  </td>
                </tr>
              </table>
              
              <p style="font-size: 12px; color: #6c757d; margin-top: 30px;">
                ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö AccNext - Solution NextGen<br>
                ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date().toLocaleString('th-TH')}
              </p>
            </div>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Monthly report email sent successfully');
      return true;

    } catch (error) {
      console.error('‚ùå Failed to send monthly report email:', error);
      return false;
    }
  }

  /**
   * ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
   * @param {number} amount - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
   * @returns {string} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß
   */
  formatCurrency(amount) {
    return new Intl.NumberFormat('th-TH', {
      style: 'currency',
      currency: 'THB'
    }).format(amount);
  }

  /**
   * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
   */
  async testEmail() {
    if (!this.transporter) {
      console.warn('Email transporter not available');
      return false;
    }

    try {
      const mailOptions = {
        from: process.env.EMAIL_FROM || process.env.EMAIL_USER,
        to: process.env.NOTIFICATION_EMAIL || 'sooksun2511@gmail.com',
        subject: '‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏• - AccNext',
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background-color: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h2 style="margin: 0 0 15px 0;">‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h2>
              <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á AccNext ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥</p>
              <p style="font-size: 12px; color: #6c757d; margin-top: 20px;">
                ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date().toLocaleString('th-TH')}
              </p>
            </div>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Test email sent successfully');
      return true;

    } catch (error) {
      console.error('‚ùå Failed to send test email:', error);
      return false;
    }
  }
}

// Export singleton instance
module.exports = new EmailService();